{"version":3,"sources":["js/promisification.js","index.js"],"names":["promise","Promise","callback","resolve","reject","setTimeout","console","log","then","handleResault","secondResault","catch","error","finally"],"mappings":";;;AAAA,MAAMA,EAAU,IAAIC,QAAQC,GAI5B,SAASA,EAASC,EAASC,GAEzBC,WAAW,KAIPD,EAAO,UAER,KAVLE,QAAQC,IAAIP,GAgBZA,EACGQ,KACCC,IACEH,QAAQC,IAAI,SAAUE,GACf,SAOVD,KACCE,IACEJ,QAAQC,IAAI,SAAUG,KAMzBC,MAAMC,GACEN,QAAQC,IAAIK,IAEpBC,QAAQ,KACPP,QAAQC,IAAI;;ACtChB,aAHA,QAAA,oBAGA,QAAA","file":"src.3a64d209.js","sourceRoot":"../src","sourcesContent":["const promise = new Promise(callback);\n\nconsole.log(promise);\n\nfunction callback(resolve, reject) {\n  let condition = 0;\n  setTimeout(() => {\n    if (condition > 1) {\n      resolve('Success');\n    } else {\n      reject('Error');\n    }\n  }, 2000);\n}\n\n// pending - в ожидании\n// settled: Fullfilled & Rejected - выполнен успешно или с ошибкой\n\npromise\n  .then(\n    handleResault => {\n      console.log('1 then', handleResault);\n      return 'ok-1';\n    },\n    // handleError => {\n    //   console.log('1', handleError);\n    //   return 'err-1';\n    // },\n  )\n  .then(\n    secondResault => {\n      console.log('2 then', secondResault);\n    },\n    // secondError => {\n    //   console.log('2', secondError);\n    // },\n  )\n  .catch(error => {\n    return console.log(error);\n  })\n  .finally(() => {\n    console.log('Финалим обработку промиса независимо от результата.');\n  });\n","import './sass/main.scss';\n// import './js/async.js';\n// import './js/date.js';\nimport './js/promisification.js';\n"]}